# Generated by Django 5.1.4 on 2025-03-05 01:47

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Booking',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('booking_type', models.CharField(choices=[('passenger', 'Passenger'), ('vehicle', 'Vehicle')], default='passenger', max_length=10)),
                ('full_name', models.CharField(max_length=200)),
                ('contact_number', models.CharField(max_length=15)),
                ('email', models.EmailField(max_length=254)),
                ('is_paid', models.BooleanField(default=False)),
                ('booking_reference', models.CharField(blank=True, max_length=20, unique=True)),
                ('qr_code', models.ImageField(blank=True, null=True, upload_to='qr_codes/')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('number_of_passengers', models.PositiveIntegerField(default=1, validators=[django.core.validators.MinValueValidator(1)])),
                ('plate_number', models.CharField(blank=True, max_length=20, null=True)),
                ('occupant_count', models.PositiveIntegerField(default=1, validators=[django.core.validators.MinValueValidator(1)])),
                ('cargo_weight', models.FloatField(default=0.0, help_text='Total cargo weight in metric tons.')),
                ('adult_passengers', models.PositiveIntegerField(default=0, validators=[django.core.validators.MinValueValidator(0)])),
                ('child_passengers', models.PositiveIntegerField(default=0, validators=[django.core.validators.MinValueValidator(0)])),
                ('adult_fare_rate', models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(0)])),
                ('child_fare_rate', models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(0)])),
                ('total_fare', models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(0)])),
            ],
        ),
        migrations.CreateModel(
            name='ContactMessage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('email', models.EmailField(max_length=254)),
                ('message', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('is_read', models.BooleanField(default=False)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Notification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('template', models.CharField(choices=[('booking_confirm', 'Booking Confirmation'), ('payment_received', 'Payment Received'), ('trip_canceled', 'Trip Canceled'), ('general_alert', 'General Alert')], max_length=50)),
                ('context', models.JSONField(blank=True, help_text='Dynamic data to display in the card template.', null=True)),
                ('is_read', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Report',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('report_type', models.CharField(choices=[('passenger', 'Passenger Report'), ('cargo', 'Cargo Report'), ('sales', 'Sales Report')], max_length=20)),
                ('generated_at', models.DateTimeField(auto_now_add=True)),
                ('details', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='TravelGuideline',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('content', models.TextField()),
                ('effective_date', models.DateField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='VehicleType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('max_occupants', models.PositiveIntegerField(default=1, help_text='Maximum number of people allowed (including driver).')),
                ('max_cargo_weight', models.FloatField(default=0.0, help_text='Max cargo weight in metric tons.')),
                ('base_fare', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
            ],
        ),
        migrations.CreateModel(
            name='Vessel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('capacity_passengers', models.PositiveIntegerField()),
                ('capacity_cargo', models.FloatField(help_text='Capacity in metric tons')),
                ('active', models.BooleanField(default=True)),
            ],
        ),
        migrations.CreateModel(
            name='Payment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount_paid', models.DecimalField(decimal_places=2, max_digits=10)),
                ('amount_received', models.DecimalField(decimal_places=2, max_digits=10)),
                ('change_amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('payment_method', models.CharField(choices=[('cash', 'Cash'), ('gcash', 'GCash')], default='cash', max_length=50)),
                ('payment_date', models.DateTimeField(auto_now_add=True)),
                ('payment_reference', models.CharField(max_length=50, unique=True)),
                ('booking', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='trip.booking')),
            ],
            options={
                'ordering': ['-payment_date'],
            },
        ),
        migrations.CreateModel(
            name='Route',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('origin', models.CharField(max_length=100)),
                ('destination', models.CharField(max_length=100)),
                ('distance', models.FloatField(help_text='Distance in nautical miles', validators=[django.core.validators.MinValueValidator(0.1)])),
                ('estimated_duration', models.DurationField(help_text='Estimated travel duration (HH:MM:SS)')),
                ('active', models.BooleanField(default=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_routes', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Schedule',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('departure_datetime', models.DateTimeField()),
                ('arrival_datetime', models.DateTimeField()),
                ('available_seats', models.PositiveIntegerField()),
                ('available_cargo_space', models.FloatField()),
                ('adult_fare', models.DecimalField(decimal_places=2, help_text='Adult passenger fare rate', max_digits=10, validators=[django.core.validators.MinValueValidator(0)])),
                ('child_fare', models.DecimalField(decimal_places=2, help_text='Child passenger fare rate (ages 3-11)', max_digits=10, validators=[django.core.validators.MinValueValidator(0)])),
                ('status', models.CharField(choices=[('scheduled', 'Scheduled'), ('in_progress', 'In Progress'), ('completed', 'Completed'), ('canceled', 'Canceled')], default='scheduled', max_length=20)),
                ('notes', models.TextField(blank=True, null=True)),
                ('route', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='trip.route')),
                ('vessel', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='trip.vessel')),
            ],
        ),
        migrations.AddField(
            model_name='booking',
            name='schedule',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='trip.schedule'),
        ),
        migrations.AddField(
            model_name='booking',
            name='vehicle_type',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='trip.vehicletype'),
        ),
        migrations.CreateModel(
            name='Rating',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rating', models.IntegerField(choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5')])),
                ('comment', models.TextField(blank=True, null=True)),
                ('full_name', models.CharField(max_length=100)),
                ('email', models.EmailField(blank=True, max_length=254, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('vessel', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='trip.vessel')),
            ],
        ),
    ]
